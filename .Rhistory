leaflet::hideGroup("EVI mean") %>%
leaflet::hideGroup("EVI sSD") %>%
leaflet::hideGroup("EVI mMax") %>%
leaflet::hideGroup("EFT inter-annual variability") %>%
leaflet::hideGroup("EFT Dissimilarity") %>%
leaflet::hideGroup("EFT richness") %>%
leaflet::hideGroup("EFT rarity") %>%
leaflet::hideGroup("Dissimilarity")
mapita
# Palettes
p_evi_mean <- colorNumeric(rainbow(10, rev = TRUE), domain=values(evi_mean), na.color = "transparent")
p_evi_sSD <- colorNumeric(rainbow(8, rev = TRUE), domain = values(evi_sSD), na.color = "transparent")
p_eft_diss <- colorNumeric(rainbow(10, rev = TRUE), domain = NULL, na.color = "transparent")
p_eft_var <- colorNumeric(rainbow(8, rev=TRUE), domain = values(eft_var), na.color = "transparent")
pal <- colorNumeric(rainbow(10), domain = NULL, na.color = "transparent")
# opacity = 0.6
m <- leaflet() %>%
addTiles(group = 'Basemap') %>%
addProviderTiles("Esri.WorldImagery", group="Satellite") %>%
# EFTs
addRasterImage(eftFactor, group = "EFT",
colors = eft_palette$eft_color) %>%
addLegend(title = "EFT", colors = eft_palette$eft_color,
labels = eft_palette$eft_nameLegend,
group = "EFT") %>%
# EVI mean
addRasterImage(evi_mean, group = "EVI mean",
colors = p_evi_mean) %>%
addLegend(title = "EVI mean", pal = p_evi_mean,
values = values(evi_mean),
group = "EVI mean") %>%
# EVI mmax
addRasterImage(evi_mmax,
group = "EVI mMax",
colors = evi_mmax_palette$color) %>%
addLegend(title = "EVI mMax", colors = evi_mmax_palette$color,
labels = evi_mmax_palette$month,
group = "EVI mMax") %>%
# EVI sSD
addRasterImage(evi_sSD, group = "EVI sSD",
colors = p_evi_sSD) %>%
addLegend(title = "EVI sSD",
pal = p_evi_sSD,
values = values(evi_sSD),
group = "EVI sSD") %>%
# EFT var
addRasterImage(eft_var, group = "EFT inter-annual variability",
colors = p_eft_var) %>%
addLegend(title = "EFT inter-annual variability",
pal = p_eft_var,
values = values(eft_var),
group = "EFT inter-annual variability") %>%
# EFT diss
addRasterImage(eft_diss, group = "EFT Dissimilarity",
colors = p_eft_diss) %>%
addLegend(title = "Dissimilarity",
pal = p_eft_diss,
values = values(eft_diss),
group = "EFT Dissimilarity") %>%
# EFT rarity
addRasterImage(eft_rarity, group = "EFT rarity",
colors = pal) %>%
addLegend(title = "EFT rarity", pal = pal,
values = values(eft_rarity),
group = "EFT rarity") %>%
# EFT richness
addRasterImage(eft_richness, group = "EFT richness",
colors = pal) %>%
addLegend(title = "EFT richness", pal = pal,
values = values(eft_richness),
group = "EFT richness") %>%
addLayersControl(position = "topleft",
baseGroups = c("Satellite", "BaseMap"),
overlayGroups = c("EFT", "EVI mean", "EVI mMax", "EVI sSD",
"EFT inter-annual variability", "EFT Dissimilarity",
"EFT rarity", "Dissimilarity"),
options = layersControlOptions(collapsed = TRUE))
mapita <- m %>%
leaflet::hideGroup("EVI mean") %>%
leaflet::hideGroup("EVI sSD") %>%
leaflet::hideGroup("EVI mMax") %>%
leaflet::hideGroup("EFT inter-annual variability") %>%
leaflet::hideGroup("EFT Dissimilarity") %>%
leaflet::hideGroup("EFT richness") %>%
leaflet::hideGroup("EFT rarity") %>%
leaflet::hideGroup("Dissimilarity")
mapita
# Palettes
p_evi_mean <- colorNumeric(rainbow(10, rev = TRUE), domain=values(evi_mean), na.color = "transparent")
p_evi_sSD <- colorNumeric(rainbow(8, rev = TRUE), domain = values(evi_sSD), na.color = "transparent")
p_eft_diss <- colorNumeric(rainbow(10, rev = TRUE), domain = NULL, na.color = "transparent")
p_eft_var <- colorNumeric(rainbow(8, rev=TRUE), domain = values(eft_var), na.color = "transparent")
pal <- colorNumeric(rainbow(10), domain = NULL, na.color = "transparent")
# opacity = 0.6
m <- leaflet() %>%
addTiles(group = 'Basemap') %>%
addProviderTiles("Esri.WorldImagery", group="Satellite") %>%
# EFTs
addRasterImage(eftFactor, group = "EFT",
colors = eft_palette$eft_color) %>%
addLegend(title = "EFT", colors = eft_palette$eft_color,
labels = eft_palette$eft_nameLegend,
group = "EFT") %>%
# EVI mean
addRasterImage(evi_mean, group = "EVI mean",
colors = p_evi_mean) %>%
addLegend(title = "EVI mean", pal = p_evi_mean,
values = values(evi_mean),
group = "EVI mean") %>%
# EVI mmax
addRasterImage(evi_mmax,
group = "EVI mMax",
colors = evi_mmax_palette$color) %>%
addLegend(title = "EVI mMax", colors = evi_mmax_palette$color,
labels = evi_mmax_palette$month,
group = "EVI mMax") %>%
# EVI sSD
addRasterImage(evi_sSD, group = "EVI sSD",
colors = p_evi_sSD) %>%
addLegend(title = "EVI sSD",
pal = p_evi_sSD,
values = values(evi_sSD),
group = "EVI sSD") %>%
# EFT var
addRasterImage(eft_var, group = "EFT inter-annual variability",
colors = p_eft_var) %>%
addLegend(title = "EFT inter-annual variability",
pal = p_eft_var,
values = values(eft_var),
group = "EFT inter-annual variability") %>%
# EFT diss
addRasterImage(eft_diss, group = "EFT Dissimilarity",
colors = p_eft_diss) %>%
addLegend(title = "Dissimilarity",
pal = p_eft_diss,
values = values(eft_diss),
group = "EFT Dissimilarity") %>%
# EFT rarity
addRasterImage(eft_rarity, group = "EFT rarity",
colors = pal) %>%
addLegend(title = "EFT rarity", pal = pal,
values = values(eft_rarity),
group = "EFT rarity") %>%
# EFT richness
addRasterImage(eft_richness, group = "EFT richness",
colors = pal) %>%
addLegend(title = "EFT richness", pal = pal,
values = values(eft_richness),
group = "EFT richness") %>%
addLayersControl(position = "topleft",
baseGroups = c("Satellite", "BaseMap"),
overlayGroups = c("EFT", "EVI mean", "EVI mMax", "EVI sSD",
"EFT inter-annual variability", "EFT Dissimilarity",
"EFT rarity", "Dissimilarity"),
options = layersControlOptions(collapsed = TRUE))
mapita <- m %>%
leaflet::hideGroup("EVI mean") %>%
leaflet::hideGroup("EVI sSD") %>%
leaflet::hideGroup("EVI mMax") %>%
leaflet::hideGroup("EFT inter-annual variability") %>%
leaflet::hideGroup("EFT Dissimilarity") %>%
leaflet::hideGroup("EFT richness") %>%
leaflet::hideGroup("EFT rarity") %>%
leaflet::hideGroup("Dissimilarity")
mapita
eft_palette
pal
pal <- colorNumeric(rainbow(10), domain = NULL, na.color = "transparent")
pal
paleta <- colorNumeric(rainbow(10), domain = NULL, na.color = "transparent")
paleta
?colorNumeric
# Palettes
p_evi_mean <- colorNumeric(rainbow(10, rev = TRUE), domain=values(evi_mean), na.color = "transparent")
p_evi_sSD <- colorNumeric(rainbow(8, rev = TRUE), domain = values(evi_sSD), na.color = "transparent")
# p_eft_diss <- colorNumeric(rainbow(10, rev = TRUE), domain = NULL, na.color = "transparent")
p_eft_var <- colorNumeric(rainbow(8, rev=TRUE), domain = values(eft_var), na.color = "transparent")
pal <- colorNumeric(rainbow(10), domain = NULL, na.color = "transparent")
p_inversa <- colorNumeric(rainbow(10, rev = TRUE), domain = NULL, na.color = "transparent")
# opacity = 0.6
m <- leaflet() %>%
addTiles(group = 'Basemap') %>%
addProviderTiles("Esri.WorldImagery", group="Satellite") %>%
# EFTs
addRasterImage(eftFactor, group = "EFT",
colors = eft_palette$eft_color) %>%
addLegend(title = "EFT", colors = eft_palette$eft_color,
labels = eft_palette$eft_nameLegend,
group = "EFT") %>%
# EVI mean
addRasterImage(evi_mean, group = "EVI mean",
colors = p_evi_mean) %>%
addLegend(title = "EVI mean", pal = p_evi_mean,
values = values(evi_mean),
group = "EVI mean") %>%
# EVI mmax
addRasterImage(evi_mmax,
group = "EVI mMax",
colors = evi_mmax_palette$color) %>%
addLegend(title = "EVI mMax", colors = evi_mmax_palette$color,
labels = evi_mmax_palette$month,
group = "EVI mMax") %>%
# EVI sSD
addRasterImage(evi_sSD, group = "EVI sSD",
colors = p_evi_sSD) %>%
addLegend(title = "EVI sSD",
pal = p_evi_sSD,
values = values(evi_sSD),
group = "EVI sSD") %>%
# EFT var
addRasterImage(eft_var, group = "EFT inter-annual variability",
colors = p_eft_var) %>%
addLegend(title = "EFT inter-annual variability",
pal = p_eft_var,
values = values(eft_var),
group = "EFT inter-annual variability") %>%
# EFT diss
addRasterImage(eft_diss, group = "EFT Dissimilarity",
colors = p_inversa) %>%
addLegend(title = "Dissimilarity",
pal = p_inversa,
values = values(eft_diss),
group = "EFT Dissimilarity") %>%
# EFT rarity
addRasterImage(eft_rarity, group = "EFT rarity",
colors = pal) %>%
addLegend(title = "EFT rarity", pal = pal,
values = values(eft_rarity),
group = "EFT rarity") %>%
# EFT richness
addRasterImage(eft_richness, group = "EFT richness",
colors = pal) %>%
addLegend(title = "EFT richness", pal = pal,
values = values(eft_richness),
group = "EFT richness") %>%
addLayersControl(position = "topleft",
baseGroups = c("Satellite", "BaseMap"),
overlayGroups = c("EFT", "EVI mean", "EVI mMax", "EVI sSD",
"EFT inter-annual variability", "EFT Dissimilarity",
"EFT rarity", "Dissimilarity"),
options = layersControlOptions(collapsed = TRUE))
mapita <- m %>%
leaflet::hideGroup("EVI mean") %>%
leaflet::hideGroup("EVI sSD") %>%
leaflet::hideGroup("EVI mMax") %>%
leaflet::hideGroup("EFT inter-annual variability") %>%
leaflet::hideGroup("EFT Dissimilarity") %>%
leaflet::hideGroup("EFT richness") %>%
leaflet::hideGroup("EFT rarity") %>%
leaflet::hideGroup("Dissimilarity")
mapita
# Palettes
p_evi_mean <- colorNumeric(rainbow(10, rev = TRUE), domain=values(evi_mean), na.color = "transparent")
p_evi_sSD <- colorNumeric(rainbow(8, rev = TRUE), domain = values(evi_sSD), na.color = "transparent")
# p_eft_diss <- colorNumeric(rainbow(10, rev = TRUE), domain = NULL, na.color = "transparent")
p_eft_var <- colorNumeric(rainbow(8, rev=TRUE), domain = values(eft_var), na.color = "transparent")
pal <- colorNumeric(rainbow(10), domain = NULL, na.color = "transparent")
p_inversa <- colorNumeric(rainbow(10, rev = TRUE), domain = NULL, na.color = "transparent")
# opacity = 0.6
m <- leaflet() %>%
addTiles(group = 'Basemap') %>%
addProviderTiles("Esri.WorldImagery", group="Satellite") %>%
# EFTs
addRasterImage(eftFactor, group = "EFT",
colors = eft_palette$eft_color) %>%
addLegend(title = "EFT", colors = eft_palette$eft_color,
labels = eft_palette$eft_nameLegend,
group = "EFT") %>%
# EVI mean
addRasterImage(evi_mean, group = "EVI mean",
colors = p_evi_mean) %>%
addLegend(title = "EVI mean", pal = p_evi_mean,
values = values(evi_mean),
group = "EVI mean") %>%
# EVI mmax
addRasterImage(evi_mmax,
group = "EVI mMax",
colors = evi_mmax_palette$color) %>%
addLegend(title = "EVI mMax", colors = evi_mmax_palette$color,
labels = evi_mmax_palette$month,
group = "EVI mMax") %>%
# EVI sSD
addRasterImage(evi_sSD, group = "EVI sSD",
colors = p_evi_sSD) %>%
addLegend(title = "EVI sSD",
pal = p_evi_sSD,
values = values(evi_sSD),
group = "EVI sSD") %>%
# EFT var
addRasterImage(eft_var, group = "EFT inter-annual variability",
colors = p_eft_var) %>%
addLegend(title = "EFT inter-annual variability",
pal = p_eft_var,
values = values(eft_var),
group = "EFT inter-annual variability") %>%
# EFT diss
addRasterImage(eft_diss, group = "EFT Dissimilarity",
colors = p_inversa) %>%
addLegend(title = "Dissimilarity",
pal = p_inversa,
values = values(eft_diss),
group = "EFT Dissimilarity") %>%
# EFT rarity
addRasterImage(eft_rarity, group = "EFT rarity",
colors = p_inversa) %>%
addLegend(title = "EFT rarity", pal = pal,
values = values(eft_rarity),
group = "EFT rarity") %>%
# EFT richness
addRasterImage(eft_richness, group = "EFT richness",
colors = p_inversa) %>%
addLegend(title = "EFT richness", pal = p_inversa,
values = values(eft_richness),
group = "EFT richness") %>%
addLayersControl(position = "topleft",
baseGroups = c("Satellite", "BaseMap"),
overlayGroups = c("EFT", "EVI mean", "EVI mMax", "EVI sSD",
"EFT inter-annual variability", "EFT Dissimilarity",
"EFT rarity", "EFT richness"),
options = layersControlOptions(collapsed = TRUE))
mapita <- m %>%
leaflet::hideGroup("EVI mean") %>%
leaflet::hideGroup("EVI sSD") %>%
leaflet::hideGroup("EVI mMax") %>%
leaflet::hideGroup("EFT inter-annual variability") %>%
leaflet::hideGroup("EFT Dissimilarity") %>%
leaflet::hideGroup("EFT richness") %>%
leaflet::hideGroup("EFT rarity") %>%
leaflet::hideGroup("Dissimilarity")
mapita
evi_mmax_palette$color
evi_mmax_palette
plot(evi_mmax)
## EVI MMAX
evi_mmax_y <- prepareData(here::here("data/v2//Ecosystem_Functional_Attributes/EVI_DMAX/Yearly"))
plot(evi_mmax_y[[1]])
NAvalue(evi_mmax_y) <- 0
plot(evi_mmax_y[[1]])
evi_mmax_levels <- data.frame(level = 1:12,
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
## Auxiliary function to convert each layer to a factor.
makeFactor <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r)[[1]] <- r_rat
}
lFactor <- lapply(seq_len(nlayers(evi_mmax_y)),
FUN = function(i) makeFactor(evi_mmax_y[[i]]))
sFactor <- stack(lFactor)
sFactor <- stack(lFactor)
## Auxiliary function to convert each layer to a factor.
makeFactor <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r[1]) <- r_rat
}
lFactor <- lapply(seq_len(nlayers(evi_mmax_y)),
FUN = function(i) makeFactor(evi_mmax_y[[i]]))
sFactor <- stack(lFactor)
View(evi_mmax_levels)
View(evi_mmax_y)
i <- makeFactor(evi_mmax_y[[1]])
makeFactor <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r) <- r_rat
}
makeFactor <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r) <- r_ra
output(r)
}
makeFactor <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r) <- r_ra
return(r)
}
i <- makeFactor(evi_mmax_y[[1]])
makeFactor <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r) <- r_rat
return(r)
}
i <- makeFactor(evi_mmax_y[[1]])
plot(i)
i
lFactor <- lapply(seq_len(nlayers(evi_mmax_y)),
FUN = function(i) makeFactor(evi_mmax_y[[i]]))
sFactor <- stack(lFactor)
sFactor
plot(sFactor[[1]])
plot(sFactor[[2]])
plot(sFactor[[3]])
sFactor[[3]]
sFactor[[4]]
## EVI MMAX
evi_mmax_y <- prepareData(here::here("data/v2//Ecosystem_Functional_Attributes/EVI_DMAX/Yearly"))
NAvalue(evi_mmax_y) <- 0
### -- Add attribute table
evi_mmax_levels <- data.frame(level = 1:12,
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
### Auxiliary function to apply attribute table to each layer
makeRat <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r) <- r_rat
return(r)
}
# Apply for each layer
aux <- lapply(seq_len(nlayers(evi_mmax_y)),
FUN = function(i) makeRat(evi_mmax_y[[i]]))
evi_mmax_y_rat <- stack(aux)
rm(all)
rm(ls())
library("flexdashboard")
library("tidyverse")
library("here")
library("raster")
library("rasterVis")
library("tmap")
library("mapview")
library("lubridate")
library("leaflet")
library("leaflet.extras")
library("leaflet.opacity")
library("RColorBrewer")
library("leaflet.esri")
library("shiny")
evi_mmax <- raster(here::here("data/v2/Ecosystem_Functional_Attributes/EVI_DMAX/Interannual_sumary/EVI_DMAX_InterAnnualMean_2001-2018_C006_MOD13Q1_Pixel232.tif"))
# Prepare stacks
library("tidyverse")
library("here")
library("raster")
library("rasterVis")
library("lubridate")
prepareData <- function(path){
require(raster)
require(tidyverse)
require(stringr)
f <- list.files(path, full.names = TRUE)
# Remove "forGoo..."
fs <- f[!grepl("forGoogleEarthVisualization", f)]
s <- stack(fs)
#Rename
new_names <- names(s) %>% modify(~str_sub(.,end = -23))
names(s) <- new_names
return(s)
}
# Average Series
## EVI mean
evi_mean_y <- prepareData(here::here("data/v2//Ecosystem_Functional_Attributes/EVI_Mean/Yearly"))
evi_mean_y <- evi_mean_y / 10000
## EVI sSD
evi_sSD_y <- prepareData(here::here("data/v2//Ecosystem_Functional_Attributes/EVI_sSD/Yearly"))
evi_sSD_y <- evi_sSD_y / 10000
## EVI MMAX
evi_mmax_y <- prepareData(here::here("data/v2//Ecosystem_Functional_Attributes/EVI_DMAX/Yearly"))
NAvalue(evi_mmax_y) <- 0
### -- Add attribute table
evi_mmax_levels <- data.frame(level = 1:12,
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
### Auxiliary function to apply attribute table to each layer
makeRat <- function(r){
r <- ratify(r)
r_rat <- levels(r)[[1]]
r_rat <- r_rat %>%
left_join(evi_mmax_levels, by = c("ID"="level"))
levels(r) <- r_rat
return(r)
}
# Apply for each layer
aux <- lapply(seq_len(nlayers(evi_mmax_y)),
FUN = function(i) makeRat(evi_mmax_y[[i]]))
evi_mmax_y_rat <- stack(aux)
devtools::install_github("wallaceEcoMod/wallace")
library(wallace)
run_wallace()
library("flexdashboard")
library("tidyverse")
library("here")
library("raster")
library("rasterVis")
library("tmap")
library("mapview")
library("lubridate")
library("leaflet")
library("leaflet.extras")
library("leaflet.opacity")
library("RColorBrewer")
library("leaflet.esri")
library("shiny")
myext <- extent(evi_mean)
