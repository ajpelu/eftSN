})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderPlot({
qtm(Europe)
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderLeaflet({
tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderLeaflet({
tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
})
}
shinyApp(ui, server)
library(leaflet)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
leafletOutput("europe")))
server <- function(input, output) {
output$europe <- renderLeaflet({
tito <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
tmap_leaflet(tito)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
library(tmap)
data(World)
varlist <- setdiff(names(World), "geometry")
runApp(list(
ui = fluidPage(
titlePanel("Shiny tmap!"),
sidebarLayout(
sidebarPanel(
selectInput("var", label = "Variable", choices = varlist, selected = "pop_est_dens")
),
mainPanel(
leafletOutput("map")
)
)
),
server = function(input, output) {
output$map = renderLeaflet({
if (packageVersion("tmap") >= 2.0) {
tm <- tm_basemap(leaflet::providers$Stamen.TerrainBackground) +
tm_shape(World) +
tm_polygons(input$var) +
tm_tiles(leaflet::providers$Stamen.TonerLabels, group = "Labels")
} else {
tm <- tm_shape(World) +
tm_polygons(input$var) +
tm_view(basemaps = "Stamen.TerrainBackground")
}
tmap_leaflet(tm)
})
}
))
library(shiny)
# Load Raster
library("raster")
library("tmap")
library("mapview")
library("here")
# Read raster
# evi_mean <- raster(here::here("data/EVI_medio_230m_2001-2016.tif"))
evi_mean <- raster(here::here("data/EVI_medio_230m_2001-2016_v2.tif"))
evi_mmax<- raster(here::here("data/EVI_MMAX_230m_2001-2016.tif"))
evi_cv <- raster(here::here("data/EVI_sCV_230m_2001-2016.tif"))
eft <- raster(here::here("/data/EFTs_230m_2001-2016.tif"))
# Solve small variations of extent
evi_mmax <- projectRaster(evi_mmax, evi_mean)
evi_cv <- projectRaster(evi_cv, evi_mean)
eft <- projectRaster(eft, evi_mean)
# Units
evi_mean <-evi_mean / 10000
evi_cv <- evi_cv / 100
eft <- round(eft)
evi_mmax <- round(evi_mmax)
# Add months to evi_mmax
evi_mmax_levels <- data.frame(level = 1:12,
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
evi_mmax <- ratify(evi_mmax)
mmax_rat <-levels(evi_mmax)[[1]]
mmax_rat <- mmax_rat %>% left_join(evi_mmax_levels, by = c("ID"="level"))
levels(evi_mmax) <- mmax_rat
# eft attributes
# https://rdrr.io/cran/raster/man/factor.html
eft_palette <- read_csv(here::here("data/paleta_eft.csv"))
# Asign eft attributes
# see an example from https://annakrystalli.me/intro-r-gis/raster.html
eft_levels <- eft_palette %>% dplyr::select(eft_id, eft_code, eft_color) %>% as.data.frame()
eft <- ratify(eft)
eft_rat <- levels(eft)[[1]]
eft_rat <- eft_rat %>% left_join(eft_levels, by=c("ID" = "eft_id"))
levels(eft) <- eft_rat
# Rename layers
names(evi_mean) <- "EVI_Mean"
names(evi_mmax) <- "EVI_DateMax"
names(evi_cv) <- "EVI_sCV"
names(eft) <- "EFT"
# Create stack
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv, RAT = TRUE)
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
pixel@data <- pixel@data[,-1]
names(pixel)[4] <- "EFT"
pixel <- pixel[,c(4,1:3)]
pixel$EVI_DateMaxMonth<- as.character(month(ymd(010101) + months(pixel$EVI_DateMax-1), label=TRUE, abbr = TRUE))
pixel@data <- pixel@data[,-3]
names(pixel)[4] <- "EVI_monthMax"
# Load Raster
library("raster")
library("tmap")
library("mapview")
library("here")
library("tidyverse")
# Read raster
# evi_mean <- raster(here::here("data/EVI_medio_230m_2001-2016.tif"))
evi_mean <- raster(here::here("data/EVI_medio_230m_2001-2016_v2.tif"))
evi_mmax<- raster(here::here("data/EVI_MMAX_230m_2001-2016.tif"))
evi_cv <- raster(here::here("data/EVI_sCV_230m_2001-2016.tif"))
eft <- raster(here::here("/data/EFTs_230m_2001-2016.tif"))
# Solve small variations of extent
evi_mmax <- projectRaster(evi_mmax, evi_mean)
evi_cv <- projectRaster(evi_cv, evi_mean)
eft <- projectRaster(eft, evi_mean)
# Units
evi_mean <-evi_mean / 10000
evi_cv <- evi_cv / 100
eft <- round(eft)
evi_mmax <- round(evi_mmax)
# Add months to evi_mmax
evi_mmax_levels <- data.frame(level = 1:12,
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
evi_mmax <- ratify(evi_mmax)
mmax_rat <-levels(evi_mmax)[[1]]
mmax_rat <- mmax_rat %>% left_join(evi_mmax_levels, by = c("ID"="level"))
levels(evi_mmax) <- mmax_rat
# eft attributes
# https://rdrr.io/cran/raster/man/factor.html
eft_palette <- read_csv(here::here("data/paleta_eft.csv"))
# Asign eft attributes
# see an example from https://annakrystalli.me/intro-r-gis/raster.html
eft_levels <- eft_palette %>% dplyr::select(eft_id, eft_code, eft_color) %>% as.data.frame()
eft <- ratify(eft)
eft_rat <- levels(eft)[[1]]
eft_rat <- eft_rat %>% left_join(eft_levels, by=c("ID" = "eft_id"))
levels(eft) <- eft_rat
# Rename layers
names(evi_mean) <- "EVI_Mean"
names(evi_mmax) <- "EVI_DateMax"
names(evi_cv) <- "EVI_sCV"
names(eft) <- "EFT"
# Create stack
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv, RAT = TRUE)
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
pixel@data <- pixel@data[,-1]
names(pixel)[4] <- "EFT"
pixel <- pixel[,c(4,1:3)]
pixel$EVI_DateMaxMonth<- as.character(month(ymd(010101) + months(pixel$EVI_DateMax-1), label=TRUE, abbr = TRUE))
pixel@data <- pixel@data[,-3]
names(pixel)[4] <- "EVI_monthMax"
#option # 2 points
puntos <- as.data.frame(rasterToPoints(evi_stack))
#option # 2 points
puntos <- as.data.frame(rasterToPoints(evi_stack))
head(puntos)
puntos$EVI_DateMaxMonth<- as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))
library("lubridate")
puntos$EVI_DateMaxMonth<- as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))
head(puntos)
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x)
head(puntos)
eft_palette
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join((eft_palette %>% dplyr::select(eft_id, eft_code, eft_color)), by = c("EFT" = "eft_id"))
eft_palette %>% dplyr::select(eft_id, eft_code, eft_color
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(eft_palette %>% dplyr::select(eft_id, eft_code, eft_color), by = c("EFT" = "eft_id"))
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join((s <- eft_palette %>% dplyr::select(eft_id, eft_code, eft_color)), by = c("EFT" = "eft_id"))
s <- eft_palette %>% dplyr::select(eft_id, eft_code, eft_color)
s
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(s, by = c("EFT" = "eft_id"))
s
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
left_join(s, by = c("EFT" = "eft_id"))
head(puntos)
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(s, c("EFT" = "eft_id"))
puntos <- as.data.frame(rasterToPoints(evi_stack))
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(s, c("EFT" = "eft_id"))
head(puntos)
#option # 2 points
puntos <- as.data.frame(rasterToPoints(evi_stack))
puntos <- as.data.frame(rasterToPoints(evi_stack))
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(eft_palette %>% dplyr::select(eft_id, eft_code, eft_color), c("EFT" = "eft_id"))
head(puntos)
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(eft_palette %>% dplyr::select(eft_id, eft_code, eft_color), c("EFT" = "eft_id"))
puntos <- as.data.frame(rasterToPoints(evi_stack))
puntos <- puntos %>%
mutate(EVI_monthMax = as.character(month(ymd(010101) + months(puntos$EVI_DateMax-1), label=TRUE, abbr = TRUE))) %>%
rename(lat = y, long = x) %>%
inner_join(eft_palette %>% dplyr::select(eft_id, eft_code, eft_color), c("EFT" = "eft_id"))
names(puntos)
puntitos <- SpatialPointsDataFrame(puntos[, c("long", "lat")], puntos)
str(puntitos)
names(puntos)
names(puntitos)
puntitos <- SpatialPointsDataFrame(puntos[, c("long", "lat")],
puntos[, c("eft_code", "EVI_Mean", "EVI_monthMax", "EVI_sCV", "eft_color")])
head(puntitos)
tmap_mode("view")
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_fill(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
library("raster")
library("tmap")
library("mapview")
library("here")
library("tidyverse")
library("lubridate")
# Read raster
# evi_mean <- raster(here::here("data/EVI_medio_230m_2001-2016.tif"))
evi_mean <- raster(here::here("data/EVI_medio_230m_2001-2016_v2.tif"))
evi_mmax<- raster(here::here("data/EVI_MMAX_230m_2001-2016.tif"))
evi_cv <- raster(here::here("data/EVI_sCV_230m_2001-2016.tif"))
eft <- raster(here::here("/data/EFTs_230m_2001-2016.tif"))
# Solve small variations of extent
evi_mmax <- projectRaster(evi_mmax, evi_mean)
evi_cv <- projectRaster(evi_cv, evi_mean)
eft <- projectRaster(eft, evi_mean)
# Units
evi_mean <-evi_mean / 10000
evi_cv <- evi_cv / 100
eft <- round(eft)
evi_mmax <- round(evi_mmax)
# Add months to evi_mmax
evi_mmax_levels <- data.frame(level = 1:12,
month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
evi_mmax <- ratify(evi_mmax)
mmax_rat <-levels(evi_mmax)[[1]]
mmax_rat <- mmax_rat %>% left_join(evi_mmax_levels, by = c("ID"="level"))
levels(evi_mmax) <- mmax_rat
# eft attributes
# https://rdrr.io/cran/raster/man/factor.html
eft_palette <- read_csv(here::here("data/paleta_eft.csv"))
# Asign eft attributes
# see an example from https://annakrystalli.me/intro-r-gis/raster.html
eft_levels <- eft_palette %>% dplyr::select(eft_id, eft_code, eft_color) %>% as.data.frame()
eft <- ratify(eft)
eft_rat <- levels(eft)[[1]]
eft_rat <- eft_rat %>% left_join(eft_levels, by=c("ID" = "eft_id"))
levels(eft) <- eft_rat
# Rename layers
names(evi_mean) <- "EVI_Mean"
names(evi_mmax) <- "EVI_DateMax"
names(evi_cv) <- "EVI_sCV"
names(eft) <- "EFT"
# Create stack
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv, RAT = TRUE)
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
pixel@data <- pixel@data[,-1]
names(pixel)[4] <- "EFT"
pixel <- pixel[,c(4,1:3)]
pixel$EVI_DateMaxMonth<- as.character(month(ymd(010101) + months(pixel$EVI_DateMax-1), label=TRUE, abbr = TRUE))
pixel@data <- pixel@data[,-3]
names(pixel)[4] <- "EVI_monthMax"
#### Visualization
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_fill(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_fill()
mapita
mapita <- tm_shape(eft, name = "EFT") +
tm_raster() +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_fill()
mapita
eft
pixel
mapita_p <- tm_shape(pixel) + tm_fill()
mapita_p
mapita_p <- tm_shape(pixel) + tm_polygon()
mapita_p <- tm_shape(pixel) + tm_polygons()
mapita_p
?tm_fill
mapita_p <- tm_shape(pixel) + tm_polygons(col = eft_palette$eft_color)
mapita_p
mapita_p <- tm_shape(pixel) + tm_polygons(col = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita_p <- tm_shape(pixel) + tm_polygons(col = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita_p
eft
eft
eft
xx <- deratify(eft, "eft_code")
xx
mapita <- tm_shape(xx, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64)
mapita
eftFactor <- deratify(eft, "eft_code")
names(eftFactor) <- "EFT"
eftFactor
mapita <- tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64)
mapita
puntitos
mapita <- tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(puntitos) + tm_dots("eft_code")
mapita
mapita <- tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_fill()
mapita
mapita <- tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.001)
mapita
?tm_polygons
tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(labels = NULL, alpha=.01, border.col = NA, border.alpha = 0.001)
mapita <- tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(labels = NULL,
popup.vars = c("EFT", "EVI mean", "EVI scV", "Month max EVI"),
alpha=.01, border.col = NA, border.alpha = 0.001)
mapita
tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(labels = NULL,
popup.vars = c("EFT" = "EFT",
"EVI mean" = "EVI_Mean",
"EVI scV" = "EVI_sCV",
"Month max EVI" = "EVI_monthMAX"),
alpha=.01, border.col = NA, border.alpha = 0.001)
data(World, metro)
metro$growth <- (metro$pop2020 - metro$pop2010) / (metro$pop2010 * 10) * 100
head(metro)
ttm()
tm_shape(metro) +
tm_bubbles("pop2010", col = "growth",
border.col = "black", border.alpha = .5,
style="fixed", breaks=c(-Inf, seq(0, 6, by=2), Inf),
palette="-RdYlBu", contrast=1,
title.size="Metro population",
title.col="Growth rate (%)", id="name",
popup.vars=c("Population (2010)"="pop2010", "Population (2020)"="pop2020", "Growth (%)"="growth"),
popup.format=list(growth=list(digits=4)))
#### Visualization
tmap_mode("view")
tm_shape(metro) +
tm_bubbles("pop2010", col = "growth",
border.col = "black", border.alpha = .5,
style="fixed", breaks=c(-Inf, seq(0, 6, by=2), Inf),
palette="-RdYlBu", contrast=1,
title.size="Metro population",
title.col="Growth rate (%)", id="name",
popup.vars=c("Population (2010)"="pop2010", "Population (2020)"="pop2020", "Growth (%)"="growth"),
popup.format=list(growth=list(digits=4)))
head(pixel)
tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(labels = NULL,
popup.vars = c("EFT" = "EFT",
"EVI mean" = "EVI_Mean",
"EVI scV" = "EVI_sCV",
"Month max EVI" = "EVI_monthMax"),
alpha=.01, border.col = NA, border.alpha = 0.001)
tm_shape(eftFactor, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(labels = NULL,
popup.vars = c("EVI mean" = "EVI_Mean",
"EVI scV" = "EVI_sCV",
"Month max EVI" = "EVI_monthMax"),
alpha=.01, border.col = NA, border.alpha = 0.001)
rareza <- raster(here::here("data/Rareza_230m_2001-2016.tif"))
plot(rareza)
plot(rareza)
ff <- as.data.frame(eft)
head(ff)
tail(ff)
ff <- as.data.frame(eft, na.rm=TRUE)
head(ff)
tics
eft_df <- as.data.frame(eft, na.rm=TRUE) %>%
dplyr::select(eft_code) %>%
group_by(eft_code) %>%
count()
head(eft_df)
eft_df <- as.data.frame(eft, na.rm=TRUE) %>%
dplyr::select(eft_code) %>%
group_by(eft_code) %>%
count() %>% inner_join(eft_palette, by ="eft_code")
head(eft_df)
ggplot(eft_df, aes(y=phenology, x=seasonality)) + geom_point(aes(size=n)) + facet_wrap(~productivity)
