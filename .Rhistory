evi_mmax
# eft attributes
# https://rdrr.io/cran/raster/man/factor.html
eft_palette <- read_csv(here::here("data/paleta_eft.csv"))
eft_palette
# Asign eft attributes
# see an example from https://annakrystalli.me/intro-r-gis/raster.html
eft_levels <- eft_palette %>% dplyr::select(eft_id, eft_code, eft_color) %>% as.data.frame()
eft_levels
eft <- ratify(eft)
eft_rat <- levels(eft)[[1]]
eft_rat <- eft_rat %>% left_join(eft_levels, by=c("ID" = "eft_id"))
levels(eft) <- eft_rat
eft
# Create stack
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv)
evi_stack
plot(pixel)
plot(evi_stack
)
eft
# Create stack
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv, RAT = TRUE)
evi_stack
# Rename layers
names(evi_mean) <- "EVI_Mean"
names(evi_mmax) <- "EVI_DateMax"
names(evi_cv) <- "EVI_sCV"
names(eft) <- "EFT"
evi_mean
evi_mmax
evi_cv
eft
tmap_mode("view")
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster(col = "EFT")
mapita
mapita <- tm_shape(eft) + tm_raster(col = "EFT") + tmap_options(max.categories = 64)
mapita
eft_levels
eft
mapita <- tm_shape(eft) + tm_raster(col = "eft_color") + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(col = "EFT$eft_color") + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(col = "eft_color") + tmap_options(max.categories = 64)
mapita
eft
mapita <- tm_shape(eft) + tm_raster(col = "eft_color") + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(col = "EFT") + tmap_options(max.categories = 64)
mapita
?tm_polygons
tmap_mode("view")
mapita <- tm_shape(eft) + tm_polygon(col = "EFT", border.col = NA) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_polygons(col = "EFT", border.col = NA) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster() + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster("eft_color") + tmap_options(max.categories = 64)
mapita
?tm_shape
mapita <- tm_shape(eft_color) + tm_raster("eft_color") + tmap_options(max.categories = 64)
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster("eft_color") + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster("eft_code") + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster(col = "eft_code") + tmap_options(max.categories = 64)
mapita
eft
mapita <- tm_shape(eft) + tm_raster(col = "EFT$eft_code") + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(col = "eft_code") + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster("eft_code") + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster("eft_code", palette = eft_palette$eft_code) + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(palette = eft_palette$eft_code) + tmap_options(max.categories = 64)
mapita
eft_palette$eft_code
mapita <- tm_shape(eft) + tm_raster(palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster("eft_code", palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster(col= "eft_code", palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(eft, col= "eft_code", palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft) + tm_raster(col= "eft_code", palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster(col= "eft_code", palette = EFT$eft_color) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) + tm_raster(col= "eft_code", palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
eft
tmap_mode("view")
mapita <- tm_shape(eft, "eft_code") + tm_raster(col = "eft_code", palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft, "eft_code") + tm_raster(palette = eft_palette$eft_color) + tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft[[eft_code]]) +
tm_raster(palette = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft[["eft_code"]]) +
tm_raster(palette = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft[[EFT]]) +
tm_raster(palette = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita
eft
mapita <- tm_shape(eft[[1]]) +
tm_raster(palette = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita
names(eft)
eft2 <- eft
pixel <- rasterToPolygons(evi_stack)
eft3 <- setValues(raster(eft), eft[])
eft3
?setValues
eft3 <- setValues(raster(eft), eft[["EFT"]])
eft3 <- setValues(raster(eft), eft_palette$eft_code)
eft3 <- setValues(raster(eft), as.factor(eft_palette$eft_code))
#### Visualization
tmap_mode("view")
mapita <- tm_shape(eft[[1]]) +
tm_raster(palette = eft_palette$eft_color) +
tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft[[1]]) +
tm_raster(palette = eft_palette$eft_color,
legend.is.portrait = TRUE) +
tmap_options(max.categories = 64) +
tm_shape(evi_stack) +
mapita
tmap_mode("view")
mapita <- tm_shape(eft[[1]]) +
tm_raster(palette = eft_palette$eft_color,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(evi_stack) +
mapita
tmap_mode("view")
mapita <- tm_shape(eft[[1]]) +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(evi_stack) +
mapita
mapita <- tm_shape(eft[[1]]) +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64)
mapita
tmap_mode("view")
mapita <- tm_shape(eft) +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64)
mapita
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE,
auto.palette.mapping = FALSE) +
tmap_options(max.categories = 64)
mapita
tmap_style_catalog()
tmap_mode("plot")
tmap_style_catalog()
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE,
auto.palette.mapping = FALSE) +
tmap_options(max.categories = 64)
tm_layout(legend.position = "bottom")
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE,
auto.palette.mapping = FALSE) +
tmap_options(max.categories = 64)
tm_layout(legend.position = c("bottom", "BOTTOM"))
mapita
#### Visualization
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_layout(legend.position = c("bottom", "BOTTOM"))
mapita
?tm_view
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_view(view.legend.position = c("left", "bottom"))
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_view(view.legend.position = c("left", "bottom")) +
tm_layout(legend.text.size = 8)
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_view(view.legend.position = c("left", "bottom")) +
tm_layout(legend.text.size = 2)
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_view(view.legend.position = c("rigth", "bottom")) +
tm_layout(legend.text.size = 2)
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_view(view.legend.position = c("rigth", "bottom"),
text.size.variable = TRUE) +
tm_layout(legend.text.size = 2)
mapita
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(evi_stack) + tm_polygons() +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(evi_stack[[1]]) + tm_polygons() +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
pixel <- rasterToPolygons(evi_stack)
head(pixel)
# Create stack
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv, RAT = TRUE)
pixel <- rasterToPolygons(evi_stack)
head(pixel)
eft_palette
pixel <- pixel %>% inner_join(eft_palette[,c("eft_id", "eft_code")], by = c("EFT" = "eft_id"))
View(mapita)
head(pixel@data)
pixel@data <- data.frame(pixel@data, eft_palette[match(pixel@data[,"EFT"], eft_palette[,"eft_id"]),])
head(pixel)
str(pixel@data)
str(eft_palette)
pixel2 <- merge(pixel, eft_palette, by.x = "EFT", by.y = "eft_id")
head(pixel2)
evi_stack <- stack(eft, evi_mean, evi_mmax, evi_cv, RAT = TRUE)
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette, by.x = "EFT", by.y = "eft_id")
head(pixel)
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
head(pixel)
pixel <- rasterToPolygons(evi_stack)
head(pixel)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
head(pixel)
?merge
pixel <- pixel[,-c("EFT")]
pixel <- pixel[,-"EFT"]
pixel@data <- pixel@data[,-"EFT"]
pixel@data
head(pixel@data)
pixel@data <- pixel@data[,-1]
head(pixel@data)
names(pixel)["eft_code"] <- "EFT"
names(pixel)
names(pixel)[["eft_code"]]
names(pixel@data)[["eft_code"]]
names(pixel@data)["eft_code"]
names(pixel)["eft_code"]
names(pixel)[4]
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
pixel@data <- pixel@data[,-1]
names(pixel)[4] <- "EFT"
head(pixel)
pixel <- pixel[,c(4,1:3)]
head(pixel)
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.9, border.col = NA) +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.1, border.col = NA, border.alpha = 0.1) +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
library(lubridate)
head(pixel)
pixel$mes<- as.character(month(ymd(010101) + months(m-1), label=TRUE, abbr = TRUE))
pixel$mes<- as.character(month(ymd(010101) + months(pixel$EVI_DateMax-1), label=TRUE, abbr = TRUE))
head(pixel)
pixel <- rasterToPolygons(evi_stack)
pixel <- merge(pixel, eft_palette[,c("eft_code", "eft_id")], by.x = "EFT", by.y = "eft_id")
pixel@data <- pixel@data[,-1]
names(pixel)[4] <- "EFT"
pixel <- pixel[,c(4,1:3)]
pixel$EVI_DateMaxMonth<- as.character(month(ymd(010101) + months(pixel$EVI_DateMax-1), label=TRUE, abbr = TRUE))
pixel@data <- pixel@data[,-3]
head(pixel)
names(pixel)[4] <- "EVI_monthMax"
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.1, border.col = NA, border.alpha = 0.1) +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
tmap_mode("view")
mapita <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
mapita
tmap_save(mapita, here::here("html/eft_map_v1.html"))
mapita2 <-  tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01)
mapita2
#option # 2 points
puntos <- rasterToPoints(evi_stack)
head(puntos)
#option # 2 points
puntos <- as.data.frame(rasterToPoints(evi_stack))
?qtm
library(shiny)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderPlot({
mapita2
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderPlot({
tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderPlot({
qtm(Europe)
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderLeaflet({
tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
plotOutput(outputId = "europe")))
server <- function(input, output) {
output$europe <- renderLeaflet({
tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
})
}
shinyApp(ui, server)
library(leaflet)
ui <- fluidPage(
titlePanel("Europe"),
mainPanel(
leafletOutput("europe")))
server <- function(input, output) {
output$europe <- renderLeaflet({
tito <- tm_shape(eft, name = "EFT") +
tm_raster(palette = eft_palette$eft_color,
alpha = 0.5,
legend.is.portrait = FALSE) +
tmap_options(max.categories = 64) +
tm_shape(pixel) + tm_polygons(alpha=.01, border.col = NA, border.alpha = 0.01) +
tm_view(view.legend.position = c("rigth", "bottom"))
tmap_leaflet(tito)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
library(tmap)
data(World)
varlist <- setdiff(names(World), "geometry")
runApp(list(
ui = fluidPage(
titlePanel("Shiny tmap!"),
sidebarLayout(
sidebarPanel(
selectInput("var", label = "Variable", choices = varlist, selected = "pop_est_dens")
),
mainPanel(
leafletOutput("map")
)
)
),
server = function(input, output) {
output$map = renderLeaflet({
if (packageVersion("tmap") >= 2.0) {
tm <- tm_basemap(leaflet::providers$Stamen.TerrainBackground) +
tm_shape(World) +
tm_polygons(input$var) +
tm_tiles(leaflet::providers$Stamen.TonerLabels, group = "Labels")
} else {
tm <- tm_shape(World) +
tm_polygons(input$var) +
tm_view(basemaps = "Stamen.TerrainBackground")
}
tmap_leaflet(tm)
})
}
))
